---

- name: Install web client dependencies
  package:
    name: "{{ item }}"
    state: present
  with_items: "{{ PACKAGES.web_client }}"

- name: Copy web_client war
  copy:
    src: "files/guacamole-{{ guacamole_version }}.war"
    dest: "{{ tomcat_dir }}/webapps/guacamole.war"

- name: Make GUACAMOLE_HOME directory
  file:
    path: "{{ GUACAMOLE_HOME }}"
    state: directory

- name: Symbolically link GUACAMOLE_HOME to /etc/guacamole
  file:
    src: "{{ GUACAMOLE_HOME }}"
    dest: /etc/guacamole
    state: link

- name: Add guacd.conf w/ SSL paths to GUACAMOLE_HOME
  template:
    src: guacd.conf.j2
    dest: "{{ GUACAMOLE_HOME }}/guacd.conf"
  when: guacd_ssl == true

- name: Make GUACAMOLE_HOME/extensions directory
  file:
    path: "{{ GUACAMOLE_HOME }}/extensions"
    state: directory

- name: Make GUACAMOLE_HOME/keys directory
  file:
    path: "{{ GUACAMOLE_HOME }}/extensions"
    state: directory
    mode: 0755

- name: Add theme extension to Guacamole
  copy:
    src: "files/{{ install_type }}-theme.jar"
    dest: "{{ GUACAMOLE_HOME }}/extensions"

- name: Move HMAC authentication jar to extensions directory
  copy:
    src: "files/guacamole-auth-hmac-{{ guacamole_version }}.jar"
    dest: "{{ GUACAMOLE_HOME }}/extensions"
  tags: hmac

- name: Add guacamole.properties to "{{ GUACAMOLE_HOME }}"
  template:
    src: guacamole.properties.j2
    dest: "{{ GUACAMOLE_HOME }}/guacamole.properties"

- name: Ensure correct permissions in GUACAMOLE_HOME
  file:
    path: "{{ GUACAMOLE_HOME }}"
    owner: tomcat7
    group: tomcat7
    recurse: yes
    state: directory

- name: Restart Tomcat7 so its files are accessible
  service:
    name: "{{ tomcat_service }}"
    state: restarted
  changed_when: False


- tags: reverse_proxy
  block:
    - name: Get certbot auto
      get_url:
        dest: /tmp
        url: https://dl.eff.org/certbot-auto
        mode: 700

    - name: Use certbot-auto with no email
      command: >
        /tmp/certbot-auto certonly --standalone -n --agree-tos --register-unsafely-without-email -d {{ ansible_fqdn }}
      when: letsencrypt_renew_email is not defined or letsencrypt_renew_email|length == 0 or letsencrypt_renew_email is none

    - name: Use certbot-auto with email
      command: >
        /tmp/certbot-auto certonly --standalone -n --agree-tos --email {{ letsencrypt_renew_email }} -d {{ ansible_fqdn }}
      when: letsencrypt_renew_email is defined and letsencrypt_renew_email|length > 0 and letsencrypt_renew_email is not none

    - name: Add nginx reverse proxy config to nginx
      template:
        src: nginx-guacamole.conf.j2
        dest: "{{ nginx_dir }}/nginx-guacamole.conf"

    - name: Create symbolic link for nginx config to sites-enabled
      file:
        src: /etc/nginx/sites-available/nginx-guacamole.conf
        dest: /etc/nginx/sites-enabled/nginx-guacamole.conf
        state: link
      when: ansible_distribution == "Ubuntu"

    - name: Remove nginx 'default' conf
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - /etc/nginx/sites-available/default
        - /usr/share/nginx/conf.d/default.conf

- tags: tomcat
  block:
    - name: Add CorsFilter to Tomcat7
      template:
        src: web.xml.j2
        dest: "{{ tomcat_dir }}/webapps/guacamole/WEB-INF/web.xml"
        force: yes

    - name: Set Tomcat7 port
      lineinfile:
        dest: "{{ tomcat_conf }}"
        state: present
        regexp: <Connector port="8080" protocol="HTTP/1.1"
        line: '    <Connector port="{{ tomcat_port }}" protocol="HTTP/1.1"'
